<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.sonar.plugins.coverity</groupId>
	<artifactId>coverity-sonar-plugin</artifactId>
	<packaging>sonar-plugin</packaging>
	<version>1.7.5</version>

	<name>Coverity</name>
	<description>Imports Coverity defects into SonarQube</description>
	<url>https://github.com/coverity/coverity-sonar-plugin</url>
	<inceptionYear>2014</inceptionYear>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.version>7.9.6</sonar.version>
		<jdk.min.version>1.8</jdk.min.version>
		<cim.url></cim.url>
		<ws.version>v9</ws.version>
	</properties>

	<licenses>
		<license>
			<name>Eclipse Public License</name>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>Synopsys, Inc.</name>
		<url>https://www.synopsys.com/</url>
	</organization>

	<developers>
		<developer>
			<id>ahcho0819</id>
			<name>Andrew Cho</name>
			<email>acho@synopsys.com</email>
		</developer>
		<developer>
			<id>shami</id>
			<name>Shami Willms</name>
			<email>kwillms@synopsys.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/coverity/coverity-sonar-plugin.git</connection>
		<developerConnection>scm:git:git@github.com:coverity/coverity-sonar-plugin.git</developerConnection>
		<url>https://github.com/coverity/coverity-sonar-plugin</url>
		<tag>HEAD</tag>
	</scm>

	<dependencies>
		<dependency>
			<groupId>org.sonarsource.sonarqube</groupId>
			<artifactId>sonar-plugin-api</artifactId>
			<version>${sonar.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- unit tests -->
		<dependency>
			<groupId>org.sonarsource.sonarqube</groupId>
			<artifactId>sonar-testing-harness</artifactId>
			<version>${sonar.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
			<scope>test</scope>
		</dependency>

		<!-- added-->
		<dependency>
			<groupId>com.sun.xml.wss</groupId>
			<artifactId>xws-security</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<version>1.3.23</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.soap</groupId>
			<artifactId>saaj-api</artifactId>
			<version>1.3.5</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>javax.xml</groupId>
            <artifactId>xmldsig</artifactId>
            <version>1.0</version>
        </dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
		</dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>3.0.0</version>
        </dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.3.2</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.staxmate</groupId>
			<artifactId>staxmate</artifactId>
			<version>2.0.1</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
				<artifactId>sonar-packaging-maven-plugin</artifactId>
				<version>1.15</version>
				<extensions>true</extensions>
				<configuration>
					<pluginClass>org.sonar.plugins.coverity.CoverityPlugin</pluginClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${jdk.min.version}</source>
					<target>${jdk.min.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<executions>
					<execution>
						<goals>
							<goal>native2ascii</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<property>
					<name>ENABLE_JACOCO</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.9</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--
                        Using JaCoCo through Ant due to limitations in jacoco-maven-plugin:
                        https://github.com/jacoco/jacoco/issues/271
                        https://github.com/jacoco/jacoco/issues/430
                        https://github.com/jacoco/jacoco/issues/493
                    -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<dependencies>
							<dependency>
								<groupId>org.jacoco</groupId>
								<artifactId>org.jacoco.ant</artifactId>
								<version>0.7.9</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>jacoco-report</id>
								<phase>verify</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef name="jacoco-report" classname="org.jacoco.ant.ReportTask"
												 classpathref="maven.plugin.classpath"/>
										<taskdef classpathref="maven.runtime.classpath"
												 resource="net/sf/antcontrib/antcontrib.properties"/>
										<available file="${project.build.directory}/jacoco.exec"
												   property="jacoco.exec.file.exists"/>
										<echo message="${project.build.directory}/jacoco.exec"/>
										<if>
											<equals arg1="${jacoco.exec.file.exists}" arg2="true"/>
											<then>
												<echo message="Executing jacoco report"/>
												<trycatch>
													<try>
														<jacoco-report>
															<executiondata>
																<file file="${project.build.directory}/jacoco.exec"/>
															</executiondata>
															<structure name="Coverity">
																<classfiles>
																	<fileset dir="${project.build.outputDirectory}"/>
																	<fileset
																			dir="${project.build.testOutputDirectory}"/>
																</classfiles>
																<sourcefiles encoding="${project.build.sourceEncoding}">
																	<fileset dir="${project.build.sourceDirectory}"/>
																	<fileset
																			dir="${project.build.testSourceDirectory}"/>
																</sourcefiles>
															</structure>
															<html
																	destdir="${project.reporting.outputDirectory}/jacoco"/>
															<xml
																	destfile="${project.reporting.outputDirectory}/jacoco/jacoco.xml"/>
														</jacoco-report>
													</try>
													<catch>
														<echo>skipping</echo>
													</catch>
												</trycatch>
											</then>
											<else>
												<echo message="No jacoco.exec file found."/>
											</else>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
		This profile is used to generate webservice calls.
		The maven command should be as follow:
		mvn -P wsimport clean generate-sources "Dcim.url=$CIM_URL_WITH_PORT"
		-->

		<profile>
			<id>wsimport</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>copy-branding-files</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/jaxws-bindings</outputDirectory>
									<resources>
										<resource>
											<directory>jaxws</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jvnet.jax-ws-commons</groupId>
						<artifactId>jaxws-maven-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<args>
								<arg>-target</arg>
								<arg>2.1</arg>
							</args>
							<bindingDirectory>${project.build.directory}/jaxws-bindings</bindingDirectory>
							<sourceDestDir>${project.basedir}/src/main/java</sourceDestDir>
							<xnoAddressingDataBinding>true</xnoAddressingDataBinding>
							<vmArgs>
								<vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
							</vmArgs>
						</configuration>
						<executions>
							<execution>
								<!-- Process files found in webservices-rt.jar/WEB-INF/wsdl first so they aren't processed below. -->
								<id>wsimport-ignored</id>
								<goals>
									<goal>wsimport</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<sourceDestDir>${project.build.directory}/ignored-sources</sourceDestDir>
								</configuration>
							</execution>
							<execution>
								<id>wsimport-public</id>
								<goals>
									<goal>wsimport</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<packageName>com.coverity.ws.v9</packageName>
									<wsdlUrls>
										<wsdlUrl>${cim.url}/ws/${ws.version}/configurationservice?wsdl</wsdlUrl>
										<wsdlUrl>${cim.url}/ws/${ws.version}/defectservice?wsdl</wsdlUrl>
									</wsdlUrls>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>sonar-plugin-local</id>
			<name>sonar-plugin-local</name>
			<url>http://artifactory.internal.synopsys.com:8081/artifactory/simple/sonar-plugin-local</url>
		</repository>
	</repositories>

</project>
